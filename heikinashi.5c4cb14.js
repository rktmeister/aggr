const e="```ts\nheikinashi(renderer: Renderer, time: number, ohlc: {\n    open: number,\n    high: number,\n    low: number,\n    close: number\n}): {\n    time: number,\n    open: number,\n    high: number,\n    low: number,\n    close: number\n}\n```\n\nComputes the Heikin-Ashi values based on the provided OHLC (Open, High, Low, Close) data. Heikin-Ashi is a charting technique that averages price data to create a Japanese candlestick chart that filters out market noise.\n\n## Parameters\n\n- `renderer`: The renderer object, which is automatically injected with the local timestamp.\n- `time`: The timestamp for the current candle/bar.\n- `ohlc`: An object containing the open, high, low, and close values of the current candle/bar.\n\n## Returns\n\nAn object containing the calculated Heikin-Ashi values:\n- `time`: The timestamp for the current candle/bar.\n- `open`: The average of the previous Heikin-Ashi candle's open and close (or the current OHLC open and close if it's the first calculation).\n- `high`: The maximum value among the current open, high, and close.\n- `low`: The minimum value among the current open, low, and close.\n- `close`: The average of the current open, high, low, and close.\n\n## Summary\n\nThe `heikinashi` function simplifies price data and helps traders identify trending periods and potential reversal points. The initial state is null, which gets updated with the high and low from the provided `ohlc`. The `close` is then computed as the average of the open, high, low, and previous close. For subsequent calculations, the `open` is averaged with the previous Heikin-Ashi candle's `open` and `close`. The resulting `low` and `high` are adjusted to represent the extremes of the current Heikin-Ashi candle.\n\n*Note: This function is often used in financial analysis to provide a smoother chart that makes it easier to identify trends and reversals compared to traditional candlestick charts.*\n";export{e as default};
